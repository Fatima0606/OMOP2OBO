# WorkFlow Do: install Python dependencies, run tests and linter, and return code coverage  
name: CI - Workflow
on: push
jobs:  
  
  build:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      
      - name: Install Requirements and Dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          pip install -e .[test]

      - name: Run Tests and Generate Coverage Results
        run: |
          pytest --cov=omop2obo --cov-report xml:coverage.xml
          python-codacy-coverage -r coverage.xml
          coveralls
          coverage run
          coverage report
          coverage xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Print directory information
        run: ls

      - name: Linting with Mypy
        run: mypy --strict-optional omop2obo

      - name: Archive Code Coverage Results
        uses: actions/upload-artifact@master
        with:
          name: code-coverage-report
          path: coverage.xml
      
  sonarCloudTrigger:
    needs: build
    name: Sonar Cloud
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # disabling shallow clone improves relevancy of reporting

      - name: Download Code Coverage Results
        uses: actions/download-artifact@master
        with:
          name: code-coverage-report
          path: coverage.xml

      - name: Sonar Cloud Scanner
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  codacyTrigger:
    needs: build
    name: Codacy
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # disabling shallow clone improves relevancy of reporting

      - name: Download Code Coverage Results
        uses: actions/download-artifact@master
        with:
          name: code-coverage-report
          path: coverage.xml

      - name: Codacy CLI Analysis
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  codeClimateTrigger:
    needs: build
    name: Code Climate
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # disabling shallow clone improves relevancy of reporting

      - name: Download Code Coverage Results
        uses: actions/download-artifact@master
        with:
          name: code-coverage-report
          path: coverage.xml

      - name: Publish Coverage to Code Climate
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: ./cc-test-reporter after-build --exit-code
          coverageLocations: ${{github.workspace}}

  coverallsTrigger:
    needs: build
    name: Coveralls
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # disabling shallow clone improves relevancy of reporting

      - name: Download Code Coverage Results
        uses: actions/download-artifact@master
        with:
          name: code-coverage-report
          path: coverage.xml

      - name: Complete Coveralls
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
